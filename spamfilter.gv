digraph spfilter{
rankdir=LR
concentrate=true
overlap=scale
//ranksep=0.25
node[shape=circle,fontname="corbel bold"]
edge[fontname="corbel bold"]
graph[dpi=150];

subgraph graphstart{
	nowhere[shape=none,style=invisible,width=0,height=0,label=""]
	start[shape=circle, rank=sink]
}
subgraph opendoc{
	opendoc_0[label=<&lt;DOC&gt;<sub>0</sub>>]
	opendoc_1[label=<&lt;DOC&gt;<sub>1</sub>>]
	opendoc_2[label=<&lt;DOC&gt;<sub>2</sub>>]
	opendoc_3[label=<&lt;DOC&gt;<sub>3</sub>>]
	opendoc_4[style=filled,fillcolor=green,label=<&lt;DOC&gt;<sub>4</sub>>]
}
subgraph docID{
	opendocID_0[label=<&lt;DOCID&gt;<sub>0</sub>>]
	opendocID_1[label=<&lt;DOCID&gt;<sub>1</sub>>]
	opendocID_2[label=<&lt;DOCID&gt;<sub>2</sub>>]
	opendocID_3[label=<&lt;DOCID&gt;<sub>3</sub>>]
	opendocID_4[label=<&lt;DOCID&gt;<sub>4</sub>>]
	opendocID_5[label=<&lt;DOCID&gt;<sub>5</sub>>]
	opendocID_6[label=<&lt;DOCID&gt;<sub>6</sub>>]
}
subgraph msg{
	msg_0[label=<msg<sub>0</sub>>]
	msg_1[label=<msg<sub>1</sub>>]
	msg_2[label=<msg<sub>2</sub>>]
	msgdig_0[style=filled,fillcolor=blue,label=<digit<sub>0</sub>>]
	msgdig_1[label=<digit<sub>1</sub>>]
}
subgraph slashID{
	closedocID_0[label=<&lt;/DOCID&gt;<sub>0</sub>>]
	closedocID_1[label=<&lt;/DOCID&gt;<sub>1</sub>>]
	closedocID_2[label=<&lt;/DOCID&gt;<sub>2</sub>>]
	closedocID_3[label=<&lt;/DOCID&gt;<sub>3</sub>>]
	closedocID_4[label=<&lt;/DOCID&gt;<sub>4</sub>>]
	closedocID_5[label=<&lt;/DOCID&gt;<sub>5</sub>>]
	closedocID_6[label=<&lt;/DOCID&gt;<sub>6</sub>>]
	closedocID_7[label=<&lt;/DOCID&gt;<sub>7</sub>>]
}
subject
subgraph search{
	notdelimited[rank=sink]
	delimited[rank=sink]
}
subgraph free{
subgraph freepart{
	free_stuff_0[label=<free<sub>0</sub>>]
	free_stuff_1[label=<free<sub>1</sub>>]
	free_stuff_2[label=<free<sub>2</sub>>]
	free_stuff_3[label=<free<sub>3</sub>>]
	free_stuff_4[label=<free<sub>4</sub>>]
}
subgraph access{
	free_access_0[label=<access<sub>0</sub>>]
	free_access_1[label=<access<sub>1</sub>>]
	free_access_2[label=<access<sub>2</sub>>]
	free_access_3[label=<access<sub>3</sub>>]
	free_access_4[label=<access<sub>4</sub>>]
	free_access_5[label=<access<sub>5</sub>>]
}
subgraph software{
	free_software_0[label=<software<sub>0</sub>>]
	free_software_1[label=<software<sub>1</sub>>]
	free_software_2[label=<software<sub>2</sub>>]
	free_software_3[label=<software<sub>3</sub>>]
	free_software_4[label=<software<sub>4</sub>>]
	free_software_5[label=<software<sub>5</sub>>]
	free_software_6[label=<software<sub>6</sub>>]
	free_software_7[label=<software<sub>7</sub>>]
}
subgraph vacation{
	free_vacation_0[label=<vacation<sub>0</sub>>]
	free_vacation_1[label=<vacation<sub>1</sub>>]
	free_vacation_2[label=<vacation<sub>2</sub>>]
	free_vacation_3[label=<vacation<sub>3</sub>>]
	free_vacation_4[label=<vacation<sub>4</sub>>]
	free_vacation_5[label=<vacation<sub>5</sub>>]
	free_vacation_6[label=<vacation<sub>6</sub>>]
	free_vacation_7[label=<vacation<sub>7</sub>>]
}
subgraph trials{
	free_trials_0[label=<trials<sub>0</sub>>]
	free_trials_1[label=<trials<sub>1</sub>>]
	free_trials_2[label=<trials<sub>2</sub>>]
	free_trials_3[label=<trials<sub>3</sub>>]
	free_trials_4[label=<trials<sub>4</sub>>]
	free_trials_5[label=<trials<sub>5</sub>>]
}
}
subgraph wins{
subgraph winn{
	win_0[label=<win<sub>0</sub>>]
	win_1[label=<win<sub>1</sub>>]
	win_2[label=<win<sub>2</sub>>]
	win_3[label=<win<sub>3</sub>>]
}
subgraph ers{
	winners_0[label=<ners<sub>0</sub>>]
	winners_1[label=<ners<sub>1</sub>>]
	winners_2[label=<ners<sub>2</sub>>]
}
subgraph ings{
	winnings_0[label=<nings<sub>0</sub>>]
	winnings_1[label=<nings<sub>1</sub>>]
	winnings_2[label=<nings<sub>2</sub>>]
	winnings_3[label=<nings<sub>3</sub>>]
}
}
isSpam[shape=doublecircle, label = "spam",style=filled,fillcolor=red]
subgraph closedoc{
	closeDoc_0[label=<&lt;/DOC&gt;<sub>0</sub>>]
	closeDoc_1[label=<&lt;/DOC&gt;<sub>1</sub>>]
	closeDoc_2[label=<&lt;/DOC&gt;<sub>2</sub>>]
	closeDoc_3[label=<&lt;/DOC&gt;<sub>3</sub>>]
	closeDoc_4[label=<&lt;/DOC&gt;<sub>4</sub>>]
}
subgraph closedocS{
	node[shape=doublecircle]
	closeDocSpam_0[label=<&lt;/DOC&gt;<sub>S0</sub>>]
	closeDocSpam_1[label=<&lt;/DOC&gt;<sub>S1</sub>>]
	closeDocSpam_2[label=<&lt;/DOC&gt;<sub>S2</sub>>]
	closeDocSpam_3[label=<&lt;/DOC&gt;<sub>S3</sub>>]
	closeDocSpam_4[label=<&lt;/DOC&gt;<sub>S4</sub>>]
}

nowhere->start
start->opendoc_0[weight=60,label="<"]
opendoc_0->opendoc_1[weight=128,label="D"]
opendoc_1->opendoc_2[weight=128,label="O"]
opendoc_2->opendoc_3[weight=128,label="C"]
opendoc_3->opendoc_4[weight=128,label=">"]
start->start[weight=128,label=<&Sigma;-{&lt;}>, constraint=false]
opendoc_0->start[weight=50,taillabel=<&Sigma;-{D}>, constraint=false, samehead=startback]
opendoc_1->start[weight=49,taillabel=<&Sigma;-{O}>, constraint=false, samehead=startback]
opendoc_2->start[weight=48,taillabel=<&Sigma;-{C}>, constraint=false, samehead=startback]
opendoc_3->start[weight=47,taillabel=<&Sigma;-{&gt;}>, constraint=false, samehead=startback]
opendoc_4->opendoc_4[weight=128,label="{ ,\\t,\\r,\\n}"]
opendoc_4->start[weight=46,taillabel=<&Sigma;-{&lt;, ,\\t,\\r,\\n}>, constraint=false, samehead=startback]

opendoc_4->opendocID_0[weight=96,label="<"]
opendocID_0->opendocID_1[weight=128,label="D"]
opendocID_1->opendocID_2[weight=128,label="O"]
opendocID_2->opendocID_3[weight=128,label="C"]
opendocID_3->opendocID_4[weight=128,label="I"]
opendocID_4->opendocID_5[weight=128,label="D"]
opendocID_5->opendocID_6[weight=128,label=">"]
opendocID_0->start[weight=45,taillabel=<&Sigma;-{D}>, constraint=false, samehead=startback]
opendocID_1->start[weight=44,taillabel=<&Sigma;-{O}>, constraint=false, samehead=startback]
opendocID_2->start[weight=43,taillabel=<&Sigma;-{C}>, constraint=false, samehead=startback]
opendocID_3->start[weight=42,taillabel=<&Sigma;-{I}>, constraint=false, samehead=startback]
opendocID_4->start[weight=41,taillabel=<&Sigma;-{D}>, constraint=false, samehead=startback]
opendocID_5->start[weight=40,taillabel=<&Sigma;-{&gt;}>, constraint=false, samehead=startback]

opendocID_6->opendocID_6[weight=128,label="{ ,\\t,\\r,\\n}"]
opendocID_6->msg_0[weight=96,label="m"]
opendocID_6->start[weight=39,taillabel=<&Sigma;-{m, ,\\t,\\r,\\n}>, constraint=false, samehead=startback]
msg_0->msg_1[weight=128,label="s"]
msg_0->start[weight=38,taillabel=<&Sigma;-{s}>, constraint=false, samehead=startback]
msg_1->msg_2[weight=128,label="g"]
msg_1->start[weight=37,taillabel=<&Sigma;-{g}>, constraint=false, samehead=startback]

msg_2->msgdig_0[weight=96,label="0123456789"]
msg_2->start[weight=36,taillabel=<&Sigma;-{0123456789}>, constraint=false, samehead=startback]
msgdig_0->closedocID_0[weight=96,label="<"]
msgdig_0->msgdig_0[weight=128,label="0123456789", constraint=false]
msgdig_0->msgdig_1[weight=128,label=", ,\\t,\\r,\\n"]
msgdig_0->start[weight=35,taillabel=<&Sigma;-{, ,\\t,\\r,\\n,0,1,2,3,4,5,6,7,8,9,&lt;}>, constraint=false, samehead=startback]
msgdig_1->closedocID_0[weight=96,label="<"]
msgdig_1->msgdig_1[weight=128,label=", ,\\t,\\r,\\n"]
msgdig_1->start[weight=34,taillabel=<&Sigma;-{, ,\\t,\\r,\\n,&lt;}>, constraint=false, samehead=startback]
closedocID_0->closedocID_1[weight=128,label="/"]
closedocID_1->closedocID_2[weight=128,label="D"]
closedocID_2->closedocID_3[weight=128,label="O"]
closedocID_3->closedocID_4[weight=128,label="C"]
closedocID_4->closedocID_5[weight=128,label="I"]
closedocID_5->closedocID_6[weight=128,label="D"]
closedocID_6->closedocID_7[weight=128,label=">"]
closedocID_0->start[weight=33,taillabel=<&Sigma;-{/}>, constraint=false, samehead=startback]
closedocID_1->start[weight=32,taillabel=<&Sigma;-{D}>, constraint=false, samehead=startback]
closedocID_2->start[weight=31,taillabel=<&Sigma;-{O}>, constraint=false, samehead=startback]
closedocID_3->start[weight=30,taillabel=<&Sigma;-{C}>, constraint=false, samehead=startback]
closedocID_4->start[weight=29,taillabel=<&Sigma;-{I}>, constraint=false, samehead=startback]
closedocID_5->start[weight=28,taillabel=<&Sigma;-{D}>, constraint=false, samehead=startback]
closedocID_6->start[weight=27,taillabel=<&Sigma;-{&gt;}>, constraint=false, samehead=startback]
closedocID_7->subject[weight=96,label="\\n"]
closedocID_7->closedocID_7[weight=128,label=<&Sigma;-{\\n}>, constraint=false]
subject->delimited[weight=5,taillabel="\\n",constraint=false]
subject->subject[weight=128,label=", ,\\r,\\t"]
subject->closedocID_7[weight=96,label=<&Sigma;-{, ,\\r,\\t,\\n}>,constraint=false]

notdelimited->delimited[weight=96,label=", ,\""]
notdelimited->notdelimited[weight=128,label=<&Sigma;-{, ,",&lt;}>,constraint = false]

delimited->delimited[weight=128,label=", ,\"",constraint=false]
delimited->notdelimited[weight=96,constraint=false, label=<&Sigma;-{f,w,&lt;,", ,}>]

notdelimited->closeDoc_0[weight=60,label="<"]
delimited->closeDoc_0[weight=60,label="<"]
closeDoc_0->closeDoc_1[weight=128,label="/"]
closeDoc_1->closeDoc_2[weight=128,label="D"]
closeDoc_2->closeDoc_3[weight=128,label="O"]
closeDoc_3->closeDoc_4[weight=128,label="C"]
closeDoc_4->start[weight=5,taillabel=">",constraint=false]
closeDoc_0->delimited[weight=50,headlabel=", ,\"", constraint=false,samehead=delim]
closeDoc_1->delimited[weight=49,headlabel=", ,\"", constraint=false,samehead=delim]
closeDoc_2->delimited[weight=48,headlabel=", ,\"", constraint=false,samehead=delim]
closeDoc_3->delimited[weight=47,headlabel=", ,\"", constraint=false,samehead=delim]
closeDoc_4->delimited[weight=46,headlabel=", ,\"", constraint=false,samehead=delim]
closeDoc_0->notdelimited[weight=50,taillabel=<&Sigma;-{/,", ,}>, constraint=false,samehead=notdelim]
closeDoc_1->notdelimited[weight=49,taillabel=<&Sigma;-{D,", ,}>, constraint=false,samehead=notdelim]
closeDoc_2->notdelimited[weight=48,taillabel=<&Sigma;-{O,", ,}>, constraint=false,samehead=notdelim]
closeDoc_4->notdelimited[weight=47,taillabel=<&Sigma;-{&gt;,", ,}>, constraint=false,samehead=notdelim]
closeDoc_3->notdelimited[weight=46,taillabel=<&Sigma;-{C,", ,}>, constraint=false,samehead=notdelim]

delimited->free_stuff_0[weight=60,label="f"]
free_stuff_0->free_stuff_1[weight=128,label="r"]
free_stuff_1->free_stuff_2[weight=128,label="e"]
free_stuff_2->free_stuff_3[weight=128,label="e"]
free_stuff_3->free_stuff_4[weight=128,label=", ,"]
free_stuff_0->delimited[weight=50,headlabel=", ,\"",constraint=false,samehead=delim]
free_stuff_1->delimited[weight=49,headlabel=", ,\"",constraint=false,samehead=delim]
free_stuff_2->delimited[weight=48,headlabel=", ,\"",constraint=false,samehead=delim]
free_stuff_0->notdelimited[weight=50,taillabel=<&Sigma;-{r, ,"}>,constraint=false,samehead=notdelim]
free_stuff_1->notdelimited[weight=49,taillabel=<&Sigma;-{e, ,"}>,constraint=false,samehead=notdelim]
free_stuff_2->notdelimited[weight=48,taillabel=<&Sigma;-{e, ,"}>,constraint=false,samehead=notdelim]
free_stuff_3->notdelimited[weight=47,taillabel=<&Sigma;-{, ,}>,constraint=false,samehead=notdelim]
free_stuff_4->notdelimited[weight=46,taillabel=<&Sigma;-{s a t v}>,constraint=false, samehead=notdelim]


free_stuff_4->free_software_0[weight=96,label="s"]
free_software_0->free_software_1[weight=128,label="o"]
free_software_1->free_software_2[weight=128,label="f"]
free_software_2->free_software_3[weight=128,label="t"]
free_software_3->free_software_4[weight=128,label="w"]
free_software_4->free_software_5[weight=128,label="a"]
free_software_5->free_software_6[weight=128,label="r"]
free_software_6->free_software_7[weight=128,label="e"]
free_software_7->isSpam[weight=5,label=", ,\""]
free_software_0->delimited[weight=45,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_1->delimited[weight=44,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_2->delimited[weight=43,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_3->delimited[weight=42,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_4->delimited[weight=41,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_5->delimited[weight=40,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_6->delimited[weight=39,headlabel=", ,\"", constraint=false, samehead=delim]
free_software_0->notdelimited[weight=45,taillabel=<&Sigma;-{o, ,"}>,constraint=false,samehead=notdelim]
free_software_1->notdelimited[weight=44,taillabel=<&Sigma;-{f, ,"}>,constraint=false,samehead=notdelim]
free_software_2->notdelimited[weight=43,taillabel=<&Sigma;-{t, ,"}>,constraint=false,samehead=notdelim]
free_software_3->notdelimited[weight=42,taillabel=<&Sigma;-{w, ,"}>,constraint=false,samehead=notdelim]
free_software_4->notdelimited[weight=41,taillabel=<&Sigma;-{a, ,"}>,constraint=false,samehead=notdelim]
free_software_5->notdelimited[weight=40,taillabel=<&Sigma;-{r, ,"}>,constraint=false,samehead=notdelim]
free_software_6->notdelimited[weight=39,taillabel=<&Sigma;-{e, ,"}>,constraint=false,samehead=notdelim]
free_software_7->notdelimited[weight=38,taillabel=<&Sigma;-{, ,"}>,constraint=false,samehead=notdelim]

free_stuff_4->free_trials_0[weight=96,label="t"]
free_trials_0->free_trials_1[weight=128,label="r"]
free_trials_1->free_trials_2[weight=128,label="i"]
free_trials_2->free_trials_3[weight=128,label="a"]
free_trials_3->free_trials_4[weight=128,label="l"]
free_trials_4->free_trials_5[weight=128,label="s"]
free_trials_5->isSpam[weight=5,label=", ,\""]
free_trials_0->delimited[weight=45,headlabel=", ,\"", constraint=false, samehead=delim]
free_trials_1->delimited[weight=44,headlabel=", ,\"", constraint=false, samehead=delim]
free_trials_2->delimited[weight=43,headlabel=", ,\"", constraint=false, samehead=delim]
free_trials_3->delimited[weight=42,headlabel=", ,\"", constraint=false, samehead=delim]
free_trials_4->delimited[weight=41,headlabel=", ,\"", constraint=false, samehead=delim]
free_trials_0->notdelimited[weight=45,taillabel=<&Sigma;-{r, ,"}>,constraint=false,samehead=notdelim]
free_trials_1->notdelimited[weight=44,taillabel=<&Sigma;-{i, ,"}>,constraint=false,samehead=notdelim]
free_trials_2->notdelimited[weight=43,taillabel=<&Sigma;-{a, ,"}>,constraint=false,samehead=notdelim]
free_trials_3->notdelimited[weight=42,taillabel=<&Sigma;-{l, ,"}>,constraint=false,samehead=notdelim]
free_trials_4->notdelimited[weight=41,taillabel=<&Sigma;-{s, ,"}>,constraint=false,samehead=notdelim]
free_trials_5->notdelimited[weight=40,taillabel=<&Sigma;-{, ,"}>,constraint=false,samehead=notdelim]


free_stuff_4->free_access_0[weight=96,label="a"]
free_access_0->free_access_1[weight=128,label="c"]
free_access_1->free_access_2[weight=128,label="c"]
free_access_2->free_access_3[weight=128,label="e"]
free_access_3->free_access_4[weight=128,label="s"]
free_access_4->free_access_5[weight=128,label="s"]
free_access_5->isSpam[weight=5,label=", ,\""]
free_access_5->notdelimited[weight=40,taillabel=<&Sigma;-{, ,"}>,constraint=false,samehead=notdelim]
free_access_0->delimited[weight=45,headlabel=", ,\"", constraint=false, samehead=delim]
free_access_1->delimited[weight=44,headlabel=", ,\"", constraint=false, samehead=delim]
free_access_2->delimited[weight=43,headlabel=", ,\"", constraint=false, samehead=delim]
free_access_3->delimited[weight=42,headlabel=", ,\"", constraint=false, samehead=delim]
free_access_4->delimited[weight=41,headlabel=", ,\"", constraint=false, samehead=delim]
free_access_0->notdelimited[weight=45,taillabel=<&Sigma;-{c, ,"}>,constraint=false,samehead=notdelim]
free_access_1->notdelimited[weight=44,taillabel=<&Sigma;-{c, ,"}>,constraint=false,samehead=notdelim]
free_access_2->notdelimited[weight=43,taillabel=<&Sigma;-{e, ,"}>,constraint=false,samehead=notdelim]
free_access_3->notdelimited[weight=42,taillabel=<&Sigma;-{s, ,"}>,constraint=false,samehead=notdelim]
free_access_4->notdelimited[weight=41,taillabel=<&Sigma;-{s, ,"}>,constraint=false,samehead=notdelim]

free_stuff_4->free_vacation_0[weight=96,label="v"]
free_vacation_0->free_vacation_1[weight=128,label="a"]
free_vacation_1->free_vacation_2[weight=128,label="c"]
free_vacation_2->free_vacation_3[weight=128,label="a"]
free_vacation_3->free_vacation_4[weight=128,label="t"]
free_vacation_4->free_vacation_5[weight=128,label="i"]
free_vacation_5->free_vacation_6[weight=128,label="o"]
free_vacation_6->free_vacation_7[weight=128,label="n"]
free_vacation_7->isSpam[weight=5,label=", ,\""]
free_vacation_7->notdelimited[weight=38,taillabel=<&Sigma;-{, ,"}>,constraint=false,samehead=notdelim]
free_vacation_0->delimited[weight=45,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_1->delimited[weight=44,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_2->delimited[weight=43,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_3->delimited[weight=42,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_4->delimited[weight=41,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_5->delimited[weight=40,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_6->delimited[weight=39,headlabel=", ,\"", constraint=false, samehead=delim]
free_vacation_0->notdelimited[weight=45,taillabel=<&Sigma;-{a, ,"}>,constraint=false,samehead=notdelim]
free_vacation_1->notdelimited[weight=44,taillabel=<&Sigma;-{c, ,"}>,constraint=false,samehead=notdelim]
free_vacation_2->notdelimited[weight=43,taillabel=<&Sigma;-{a, ,"}>,constraint=false,samehead=notdelim]
free_vacation_3->notdelimited[weight=42,taillabel=<&Sigma;-{t, ,"}>,constraint=false,samehead=notdelim]
free_vacation_4->notdelimited[weight=41,taillabel=<&Sigma;-{i, ,"}>,constraint=false,samehead=notdelim]
free_vacation_5->notdelimited[weight=40,taillabel=<&Sigma;-{o, ,"}>,constraint=false,samehead=notdelim]
free_vacation_6->notdelimited[weight=39,taillabel=<&Sigma;-{n, ,"}>,constraint=false,samehead=notdelim]


delimited->win_0[weight=60,label="w"]
win_0->win_1[weight=128,label="i"]
win_1->win_2[weight=128,label="n"]
win_2->isSpam[weight=5,label=", ,\""]
win_2->win_3[weight=96,label="n"]
win_2->notdelimited[weight=48,taillabel=<&Sigma;-{n, ,"}>,constraint=false,samehead=notdelim]
win_0->delimited[weight=50,headlabel=", ,\"", constraint=false, samehead=delim]
win_1->delimited[weight=49,headlabel=", ,\"", constraint=false, samehead=delim]
win_0->notdelimited[weight=50,taillabel=<&Sigma;-{i, ,"}>,constraint=false,samehead=notdelim]
win_1->notdelimited[weight=49,taillabel=<&Sigma;-{n, ,"}>,constraint=false,samehead=notdelim]
win_2->notdelimited[weight=48,taillabel=<&Sigma;-{n, ,"}>,constraint=false,samehead=notdelim]
win_3->delimited[weight=10,headlabel=", ,\"",constraint=false,samehead=delim]
win_3->notdelimited[weight=10,taillabel=<&Sigma;-{e,i, ,"}>,constraint=false, samehead=notdelim]


win_3->winners_0[weight=96,label="e"]
winners_0->winners_1[weight=128,label="r"]
winners_1->winners_2[weight=128,label="s"]
winners_2->isSpam[weight=5,label=", ,\""]
winners_2->notdelimited[weight=48,taillabel=<&Sigma;-{, ,"}>,constraint=false,samehead=notdelim]
winners_0->delimited[weight=50,headlabel=", ,\"", constraint=false, samehead=delim]
winners_1->delimited[weight=49,headlabel=", ,\"", constraint=false, samehead=delim]
winners_0->notdelimited[weight=50,taillabel=<&Sigma;-{r, ,"}>,constraint=false,samehead=notdelim]
winners_1->notdelimited[weight=49,taillabel=<&Sigma;-{s, ,"}>,constraint=false,samehead=notdelim]

win_3->winnings_0[weight=96,label="i"]
winnings_0->winnings_1[weight=128,label="n"]
winnings_1->winnings_2[weight=128,label="g"]
winnings_2->winnings_3[weight=128,label="S"]
winnings_3->isSpam[weight=5,label=", ,\""]
winnings_3->notdelimited[weight=47,taillabel=<&Sigma;-{, ,"}>,constraint=false,samehead=notdelim]
winnings_0->delimited[weight=50,headlabel=", ,\"", constraint=false, samehead=delim]
winnings_1->delimited[weight=49,headlabel=", ,\"", constraint=false, samehead=delim]
winnings_2->delimited[weight=48,headlabel=", ,\"", constraint=false, samehead=delim]
winnings_0->notdelimited[weight=50,taillabel=<&Sigma;-{n, ,"}>,constraint=false,samehead=notdelim]
winnings_1->notdelimited[weight=50,taillabel=<&Sigma;-{g, ,"}>,constraint=false,samehead=notdelim]
winnings_2->notdelimited[weight=50,taillabel=<&Sigma;-{S, ,"}>,constraint=false,samehead=notdelim]


isSpam->closeDocSpam_0[weight=96,label="<"]
isSpam->isSpam[label=<weight=128,&Sigma;-{&lt;}>]
closeDocSpam_0->closeDocSpam_1[weight=128,label="/"]
closeDocSpam_1->closeDocSpam_2[weight=128,label="D"]
closeDocSpam_2->closeDocSpam_3[weight=128,label="O"]
closeDocSpam_3->closeDocSpam_4[weight=128,label="C"]
closeDocSpam_4->start[weight=5,taillabel=">",constraint=false]
closeDocSpam_0->isSpam[weight=19,taillabel=<&Sigma;-{/}>, constraint=false,samehead=spam]
closeDocSpam_1->isSpam[weight=18,taillabel=<&Sigma;-{D}>, constraint=false,samehead=spam]
closeDocSpam_2->isSpam[weight=17,taillabel=<&Sigma;-{O}>, constraint=false,samehead=spam]
closeDocSpam_3->isSpam[weight=16,taillabel=<&Sigma;-{C}>, constraint=false,samehead=spam]
closeDocSpam_4->isSpam[weight=15,taillabel=<&Sigma;-{&gt;}>, constraint=false,samehead=spam]

}